// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Computer.hdl

/**
 * The HACK computer, including CPU, ROM and RAM.
 * When reset is 0, the program stored in the computer's ROM executes.
 * When reset is 1, the execution of the program restarts.
 * Thus, to start a program's execution, reset must be pushed "up" (1)
 * and "down" (0). From this point onward the user is at the mercy of
 * the software. In particular, depending on the program's code, the
 * screen may show some output and the user may be able to interact
 * with the computer via the keyboard.
 */

CHIP Computer {

    IN reset;

    PARTS:
    /** Proposed implementation :
      * ROM32K's input is the PC output, and its output is CPU's address[16] input
      * As evident, ROM32k FETCHes (PCoutput)th instruction from ROM, sends it over to CPU for DECODE/EXECUTE.
      *
      * Data Memory has the inputs writeM (1 bit that indicates whether we will write to memory or not), outM (the thing to be written to memory)
      * and addressM (address of the thing to be fetched from or written to data memory)
      * RAM's output will be going into CPU as inM.
      *
      * Pretty clear what CPU inputs/outputs will be
      */


      ROM32K (address = pc, out = instruction);
      CPU (reset = reset, instruction = instruction, inM = out, pc = pc, addressM = addressM, writeM = writeM, outM = outM);
      Memory ( load = writeM, address = addressM, in = outM, out = out);


}
